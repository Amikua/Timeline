// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  githubId  Int    @unique
  avatarUrl String
  username  String @unique
  email     String

  sessions Session[]

  projects       Project[]
  ownedProjects  Project[] @relation("OwnedProjects")
  unreadProjects Project[] @relation("UnreadProjects")

  ProjectEvent ProjectEvent[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Project {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  name            String   @db.VarChar(255)
  apiKey          String   @default(uuid())
  isActive        Boolean  @default(true)
  backgroundImageLightMode String?
  backgroundImageDarkMode String?

  authorId String
  author   User   @relation("OwnedProjects", fields: [authorId], references: [id])

  users    User[]
  unreadBy User[] @relation("UnreadProjects")

  events ProjectEvent[]
}

model ProjectEvent {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  happendAt DateTime @default(now())
  content   String   @db.VarChar(255)
  category  Category

  authorId String
  author   User   @relation(references: [id], fields: [authorId], onDelete: Cascade)

  projectId String
  Project   Project @relation(references: [id], fields: [projectId], onDelete: Cascade)
}

enum Category {
  ISSUE
  BUG
  FEATURES
  WIP
  ZAP
  TADA
  AMBULANCE
  ROCKET
  CHECKMARK
  LOCK
  PENCIL
  REWIND
  BULB
  SPEECH
  PHONE
  RUBBISH
}
